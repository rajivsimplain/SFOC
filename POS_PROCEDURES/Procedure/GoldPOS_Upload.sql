USE [POS]
GO

/****** Object:  StoredProcedure [dbo].[GoldPOS_Upload]    Script Date: 2/5/2025 11:11:58 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GoldPOS_Upload]
@RUNID INT,
@PROCESSID INT


AS

DECLARE 
@CNT NVARCHAR(100),
 @I INT=0 ,
 @CN NVARCHAR(100),
 @ATTCN NVARCHAR(100),
 @l_docnum NVARCHAR(50),
 @GOLDSTORE NVARCHAR(50),
 @ARTCO NVARCHAR(100),
 @STORE nvarchar(100),
 @DOCNUM NVARCHAR(50),
 @OP_FLAG NVARCHAR(50),
 @FOODSTMP NVARCHAR(100),
 @vdrprdid nvarchar(100),
 @REQCOUNT NVARCHAR(100),
 @EAP NVARCHAR(50),
 @PRODTYP NVARCHAR(100),
 @PRICE NVARCHAR(50),
 @NOSA NVARCHAR(100),
 @CEXR NVARCHAR(100),
 @UPC NVARCHAR(100),
 @ITEM_IN NVARCHAR(100),
 @ITEM_SV NVARCHAR(100),
 @CATGRY NVARCHAR(10),
 @SCATGRY NVARCHAR(10),
 @PVTLBL NVARCHAR(50),
 @PVTLBL2 NVARCHAR(50),
 @DEPT NVARCHAR(10),
 @RX NVARCHAR(100),
 @lblsize nvarchar(50),
 @sgnsize nvarchar(50),
 @form nvarchar(50),
 @AGE NVARCHAR(100),
 @SAMPLE NVARCHAR(100),
 @QHP NVARCHAR(100),
 @PRICERQD NVARCHAR(100),
 @QTYRQD NVARCHAR(100),
 @TAX NVARCHAR(100),
 @SCALEABLE NVARCHAR(100),
 @DESCRIPTION NVARCHAR(100),
 @ARCCODE NVARCHAR(100),
 @MULTIUPC NVARCHAR(50),
 @CASEPACK NVARCHAR(50),
 @STRUCT NVARCHAR(100),
 @VDRNUM NVARCHAR(100),
 @STORENUM NVARCHAR(100),
 @VDRNAME NVARCHAR(100),
 @VALUECARD NVARCHAR(100),
 @DEPARTMENT_CODE NVARCHAR(100),
 @ITEM_NAME VARCHAR(18),
 @EA NVARCHAR(100),
 @FREEFORM NVARCHAR(100),
 @RPTCODE NVARCHAR(100),
 @UPCBAR NVARCHAR(50),
 @PROCESSTYPE NVARCHAR(50),
 @MALAMA NVARCHAR(50),
 @FORMNO NVARCHAR(50),
 @VDRIN numeric(10),
 @LBL NVARCHAR(100),
 @REG NVARCHAR(100),
 @LIMITDESC NVARCHAR(100),
 @DEPTCD NVARCHAR(100),
 @CPM NVARCHAR(100),
 @COLOR NVARCHAR(100),
 @ARTCEXR NVARCHAR(100),
 @ARTTYPP NVARCHAR(100),
 @ARTETAT NVARCHAR(100),
 @ARTCOMP NVARCHAR(100),
 @ARTUSTK NVARCHAR(100),
 @ARTUFAC NVARCHAR(100),
 @ARTUTIL NVARCHAR(100),
 @WIC NVARCHAR(100),
 @QTYONE NVARCHAR(100),
 @SKU NVARCHAR(100),
 @RESTR NVARCHAR(100),
 @ARCN NVARCHAR(100),
 @request_id nvarchar(100),
 @ARCCINR INT,
 @AATCINR INT,
 @ARTDCRE DATE,
 @ARTDMAJ DATE,
 @INPUT_CURSOR NVARCHAR(100),
 @ART NVARCHAR(100),
 @LOEN NVARCHAR(50),
 --@ITEM_IN INT,
 @ITEMFLAG CHAR(1),
 @TAB NVARCHAR(100),
 @RECCNT INT,
 @VENDOR VARCHAR(10),
 @ARVCLIBL INT;
 
 
BEGIN

	--BEGIN TRANSACTION 

	--BEGIN TRY

	
	SELECT distinct store_id as active_posstore INTO #POSSTORE FROM pos_store_session 
--	WHERE CAST(GETDATE() as date)=CAST(created_at as date) 
	where session_type='REGULAR';
	
	SELECT GoldStore,active_posstore INTO #teststore
	FROM GoldPos_Store_map,#POSSTORE 
	WHERE PosStore=active_posstore;
	
	--select 1 GoldStore,'0093' active_posstore  into #teststore

	RAISERROR('Get COUPON_EQUALS_PRICE param....',10,1) WITH NOWAIT
	DECLARE @usemulti char(1)='N';
  IF (SELECT PARAM_VALUE FROM ETL_PARAM WHERE PARAM_NAME='COUPON_EQUALS_PRICE' ) ='TRUE' 
  BEGIN
   set @usemulti ='N';
  END
  ELSE
  BEGIN
   set @usemulti ='Y';
  END;
	

	RAISERROR('Validate Data changes',10,1) WITH NOWAIT

	set @RECCNT=1;

--	IF ISNULL(@RECCNT,0)>0 
	--BEGIN
	--ARTRAC

	    UPDATE A SET OP_FLAG='D' FROM ETL_ARTATTRI A  WHERE NOT EXISTS ( SELECT 1 FROM ETL_ARTATTRI B WHERE A.AATCINR=B.AATCINR AND 
		B.RUNID=0 AND B.AATCATT='PRODTYP' AND B.AATCATT='DISC' and CAST(GETDATE() AS DATE) BETWEEN B.AATDDEB AND B.AATDFIN )
		AND CAST(GETDATE() AS DATE) BETWEEN A.AATDDEB AND A.AATDFIN 
		AND A.RUNID=@RUNID AND A.OP_Flag='N' AND A.AATCATT='PRODTYP' AND A.AATCATT='DISC';

			--DISCONTINUED ITEM
		UPDATE A SET  OP_FLAG='D' FROM ETL_ARTUC A  WHERE		
		(A.ARALIBACH<=FORMAT(GETDATE()+1,'dd-MMM-yy')  OR  A.ARALIBACH<=convert(varchar, GETDATE()+1, 101) OR A.ARALIBACH<=convert(varchar, GETDATE()+1, 103) OR
		A.ARALIBACH<=convert(varchar, GETDATE()+1, 105) OR A.ARALIBACH<=convert(varchar, GETDATE()+1, 110) OR A.ARALIBACH<=convert(varchar, GETDATE()+1, 111) )
	    AND A.RUNID=@RUNID  ;


	    UPDATE INC SET OP_FLAG='I' FROM ETL_ARTRAC INC WHERE NOT EXISTS(SELECT 1 FROM ETL_ARTRAC INI WHERE INC.ARTCINR=INI.ARTCINR AND 
		INI.RUNID=0) AND INC.OP_Flag='N' AND INC.RUNID=@RUNID;  --VERY NEW ITEM 


		UPDATE A SET OP_Flag='U'  from ETL_ARTATTRI A join ETL_ARTATTRI B ON A.AATCINR=B.AATCINR 
		WHERE ((ISNULL(A.AATCATT,0)<>ISNULL(B.AATCATT,0) 
        AND (A.AATCCLA IN ('FOODSTMP','PRODTYP','NOSA','RX','SCALE','PRICERQD','QHP','QTYRQD','AGE','TAX','QTYONE','POINTS','RESTR','POSITEM','LINK_CD')
		OR   A.AATCCLA LIKE 'DEPT%')) 
	--	OR  ((A.AATVALN<>B.AATVALN) AND A.AATCCLA='X1DESC')
		) AND CAST(GETDATE() AS DATE) BETWEEN A.AATDDEB AND A.AATDFIN 
		AND A.RUNID=@RUNID and B.RUNID=0 AND A.OP_Flag='N';
		
		--LABEL CHANGES ONLY
		 --MOVED TO LABEL PROC
	/*	UPDATE A SET OP_Flag=A.OP_FLAG+'L'  from ETL_ARTATTRI A join ETL_ARTATTRI B ON A.AATCINR=B.AATCINR
		 WHERE	(((ISNULL(A.AATVALN,0)<>ISNULL(B.AATVALN,0)  OR ISNULL(A.AATVALNUM,0)<>ISNULL(B.AATVALNUM,0))
		AND A.AATCCLA IN ('FREEFORM','RPTCODE','X3DESC','X2DESC') )
		OR ISNULL(A.AATCATT,0)<>ISNULL(B.AATCATT,0) AND (A.AATCCLA IN ('SGN0','LBL0')))
		AND  CAST(GETDATE() AS DATE) BETWEEN A.AATDDEB AND A.AATDFIN
		AND A.RUNID=@RUNID and B.RUNID=0 AND A.OP_Flag<>'D';*/

		RAISERROR('artcoca modification..',10,1) WITH NOWAIT	

		UPDATE A SET OP_Flag='I' from ETL_ARTCOCA A
		WHERE NOT EXISTS(SELECT 1 FROM ETL_ARTCOCA B WHERE A.ARCCODE=B.ARCCODE 
		AND CAST(GETDATE() AS DATE) BETWEEN B.ARCDDEB AND B.ARCDFIN AND B.RUNID=0) 
		AND CAST(GETDATE() AS DATE) BETWEEN A.ARCDDEB AND A.ARCDFIN AND A.ARCIETI =
		(SELECT ARCIETI FROM (SELECT ARCIETI, ROW_NUMBER() OVER(ORDER BY ARCIETI desc) AS RowNUM from ETL_ARTCOCA C
					WHERE (CAST(GETDATE() AS DATE) BETWEEN ARCDDEB AND ARCDFIN ) AND A.ARCCODE=C.ARCCODE  AND RUNID=0) T  
					WHERE RowNUM=1 )
		AND A.OP_Flag='N' AND A.RUNID=@RUNID;
		
		
		UPDATE A SET A.OP_FLAG='U'  
		FROM ETL_TRA_STRUCOBJ A,ETL_TRA_STRUCOBJ B WHERE ( A.TSOBDESC<>B.TSOBDESC  OR A.TSOBDCAIS<>B.TSOBDCAIS ) 
		AND A.LANGUE=B.LANGUE AND A.LANGUE='US' AND A.Runid=@RUNID AND B.RUNID=0 AND A.OP_Flag<>'N';

	
		---ARTUC FOR LABEL PROCESS ONLY --NOT POS MOVED TO LABEL PROC
		/*UPDATE A SET  OP_FLAG=A.OP_FLAG+'L' FROM ETL_ARTUC A JOIN ETL_ARTUC B ON  A.ARACINR=B.ARACINR AND A.ARASITE=B.ARASITE AND A.ARACFIN=B.ARACFIN AND 
		A.ARASEQVL=B.ARASEQVL AND A.ARADDEB=B.ARADDEB 	AND (A.ARATFOU<>B.ARATFOU OR A.ARACEAN<>B.ARACEAN) AND CAST(GETDATE() AS DATE) BETWEEN A.ARADDEB AND A.ARADFIN 
		AND A.RUNID=@RUNID AND B.RUNID=0 AND A.OP_Flag<>'D';*/
		 
	--Price Tables

		--AVICINV,AVIDDEB,AVINTAR

		RAISERROR('Price Tables Modification..',10,1) WITH NOWAIT	

		--NEW PRICE

		UPDATE A SET OP_FLAG='IP' FROM ETL_AVEPRIX A WHERE NOT EXISTS (SELECT 1 FROM ETL_AVEPRIX B WHERE A.AVICINV=B.AVICINV 
		AND A.AVIDDEB=B.AVIDDEB AND A.AVINTAR=B.AVINTAR AND CAST(GETDATE() AS DATE) BETWEEN B.AVIDDEB AND B.AVIDFIN AND B.RUNID=0)
		AND CAST(GETDATE() AS DATE) BETWEEN A.AVIDDEB AND A.AVIDFIN AND A.RUNID=@RUNID AND A.OP_FLAG='N';
		
		--ENDDATE /STARTDATE TOMO CHANGE
		UPDATE A SET OP_FLAG='SP' FROM ETL_AVEPRIX A , ETL_AVEPRIX B WHERE A.AVICINV=B.AVICINV 
		AND A.AVIDDEB=B.AVIDDEB AND A.AVINTAR=B.AVINTAR 
		AND (CAST(GETDATE() AS DATE) = A.AVIDDEB  OR A.AVIDFIN=CAST(GETDATE() AS DATE) OR ( A.AVIPRIX<>B.AVIPRIX ) )--AND CAST(GETDATE() AS DATE) < A.AVIDDEB))
		AND A.RUNID=@RUNID AND A.OP_FLAG='N' AND B.RUNID=0;

		--ENDDATE CHANGE
		UPDATE A SET OP_FLAG='EP' FROM ETL_AVETAR A,ETL_AVETAR B WHERE A.AVENTAR=B.AVENTAR AND B.RUNID=0
		AND EXISTS (SELECT 1 FROM ETL_AVEPRIX C WHERE A.AVENTAR=C.AVINTAR AND CAST(GETDATE() AS DATE) BETWEEN C.AVIDDEB AND C.AVIDFIN AND C.RUNID=0 )
		AND A.RUNID=@RUNID AND A.OP_FLAG='N' AND (A.AVEDFIN=CAST(GETDATE() AS DATE) OR A.AVENOPR<>B.AVENOPR);	
		

		--ENDDATE /STARTDATE TOMO CHANGE

		UPDATE A SET OP_FLAG='SP' FROM ETL_AVESCOPE A WHERE  ---NOT EXISTS (SELECT 1 FROM ETL_AVESCOPE B WHERE A.AVONTAR=B.AVONTAR AND B.RUNID=0 )
		EXISTS  ( SELECT 1 FROM ETL_AVEPRIX C WHERE A.AVONTAR=C.AVINTAR AND CAST(GETDATE() AS DATE) BETWEEN C.AVIDDEB AND C.AVIDFIN AND C.RUNID=0 )
		AND A.RUNID=@RUNID AND A.OP_FLAG='N' AND (CAST(GETDATE() AS DATE) = A.AVODDEB OR A.AVODFIN=CAST(GETDATE() AS DATE))
		

		--OPRATTRI PROMO EVENT START OR END
		 UPDATE A SET A.OP_FLAG='UP' FROM ETL_AVETAR A ,ETL_OPRATTRI B WHERE  
		 B.RUNID=@RUNID AND B.OP_FLAG='N' AND (CAST(GETDATE() AS DATE) = B.PATDDEB OR B.PATDFIN=CAST(GETDATE() AS DATE))
		 AND AVENOPR=PATNOPR AND  CAST(GETDATE() AS DATE) BETWEEN A.AVEDDEB AND A.AVEDFIN AND A.RUNID=0  AND
		 EXISTS  ( SELECT 1 FROM ETL_AVEPRIX C WHERE A.AVENTAR=C.AVINTAR AND CAST(GETDATE() AS DATE) BETWEEN C.AVIDDEB AND C.AVIDFIN AND C.RUNID=0 )
		 
		
		  ---ENDDATE AS TODAY DATE

		--COLLECT CURRENT RUNID RECORDS TO TEMP TABLE

		RAISERROR('Current runid to teMp tables',10,1) WITH NOWAIT	

	   SELECT * INTO #ETL_ARTATTRI  FROM ETL_ARTATTRI WHERE RUNID=@RUNID ;
	   SELECT * INTO #ETL_TRA_STRUCOBJ FROM ETL_TRA_STRUCOBJ WHERE RUNID=@RUNID ;
	   SELECT * INTO #ETL_STRUCOBJ FROM ETL_STRUCOBJ WHERE RUNID=@RUNID ;
	     
	   SELECT * INTO #ETL_STRUCREL FROM ETL_STRUCREL WHERE RUNID=@RUNID;
	   SELECT * INTO #ETL_ARTCOCA FROM ETL_ARTCOCA WHERE RUNID=@RUNID ;
	   SELECT * INTO #ETL_ARTRAC FROM ETL_ARTRAC WHERE RUNID=@RUNID ;
	   SELECT * INTO #ETL_ARTUC FROM ETL_ARTUC WHERE RUNID=@RUNID ;
	   SELECT * INTO #ETL_FOUDGENE FROM ETL_FOUDGENE WHERE RUNID=@RUNID;
	   SELECT * INTO #ETL_SITDGENE FROM ETL_SITDGENE WHERE RUNID=@RUNID;
	   SELECT * INTO #ETL_ARTUV FROM ETL_ARTUV WHERE RUNID=@RUNID;
	   SELECT * INTO #ETL_SITATTRI FROM ETL_SITATTRI WHERE RUNID=@RUNID;
           
		   --PRICE 
       SELECT * INTO #ETL_AVETAR FROM ETL_AVETAR WHERE RUNID=@RUNID;
	   SELECT * INTO #ETL_AVEPRIX FROM ETL_AVEPRIX WHERE RUNID=@RUNID ; 
	   SELECT * INTO #ETL_AVESCOPE FROM ETL_AVESCOPE WHERE RUNID=@RUNID;
	   SELECT * INTO #ETL_OPRPLAN FROM ETL_OPRPLAN WHERE RUNID=@RUNID;
	   SELECT * INTO #ETL_OPRATTRI FROM ETL_OPRATTRI WHERE RUNID=@RUNID;
	   SELECT*  INTO #ETL_RESEAU  FROM ETL_RESEAU WHERE RUNID=@RUNID;

	   
	   
        UPDATE ETL_AVEPRIX SET OP_FLAG='P' WHERE RUNID=0 AND (CONVERT(DATE,GETDATE())=AVIDDEB OR CONVERT(DATE,GETDATE()-1)=AVIDFIN) ;

		UPDATE ETL_RESEAU SET OP_FLAG='P' WHERE RUNID=0 AND (CONVERT(DATE,GETDATE())=RESDDEB OR CONVERT(DATE,GETDATE()-1)=RESDFIN) ;

		UPDATE ETL_AVESCOPE SET OP_FLAG='P' WHERE RUNID=0 AND (CONVERT(DATE,GETDATE())=AVODDEB OR CONVERT(DATE,GETDATE()-1)=AVODFIN) ;
		
		UPDATE ETL_AVETAR SET OP_FLAG='P' WHERE RUNID=0 AND (CONVERT(DATE,GETDATE())=AVEDDEB OR CONVERT(DATE,GETDATE()-1)=AVEDFIN) ;

		UPDATE ETL_OPRATTRI SET OP_FLAG='P' WHERE RUNID=0 AND (CONVERT(DATE,GETDATE())=PATDDEB OR CONVERT(DATE,GETDATE()-1)=PATDFIN) ;


		
		RAISERROR('Create Process Item table..',10,1) WITH NOWAIT	
		--add price table later
	   SELECT DISTINCT ITEM, ITEM_FLAG INTO #PROCESS_ITEM FROM (
	   SELECT AATCINR AS ITEM ,'U' AS ITEM_FLAG FROM #ETL_ARTATTRI WHERE OP_FLAG LIKE '%U%' --IN ('I','U')
	   UNION 
	   SELECT ARCCINR AS ITEM ,'I' AS ITEM_FLAG FROM #ETL_ARTCOCA WHERE OP_FLAG LIKE '%I%' --IN ('I','U')
	  -- UNION 
	  -- SELECT SOBCINT AS ITEM,'U' AS ITEM_FLAG FROM #ETL_STRUCOBJ 
       UNION
	   SELECT TSOBCINT AS ITEM,'U' AS ITEM_FLAG FROM #ETL_TRA_STRUCOBJ WHERE OP_FLAG LIKE '%U%'--IN ('I','U')
	   UNION
	   SELECT ARTCINR AS ITEM ,'U' AS ITEM_FLAG FROM #ETL_ARTRAC WHERE OP_FLAG LIKE '%U%' OR OP_Flag LIKE '%I%'--IN ('I','U')
	   UNION
	   SELECT ARACINR AS ITEM,'D' AS ITEM_FLAG  FROM  #ETL_ARTUC WHERE  OP_FLAG='D'
	   UNION
	   SELECT ARACINR AS ITEM,'L' AS ITEM_FLAG  FROM  #ETL_ARTUC WHERE  OP_FLAG like '%L'
	   union
	   SELECT ARACINR AS ITEM,'U' AS ITEM_FLAG  FROM  #ETL_ARTUC WHERE  OP_FLAG LIKE '%U%' --'U'
	    UNION
	   SELECT AATCINR AS ITEM,'L' AS ITEM_FLAG  FROM  #ETL_ARTATTRI WHERE  OP_FLAG like '%L'
	   	   )  T

	 --	 SELECT * FROM #PROCESS_ITEM
		 	RAISERROR('Call GoldETL_IncrementalLoad proc to Update initial Load',10,1) WITH NOWAIT

	EXEC [dbo].[GoldETL_IncrementalLoad] @RUNID
	--drop table #process_price


	 SELECT DISTINCT AVICINV,AVORESCINT,AVINTAR INTO #PROCESS_PRICE 
	 FROM ETL_AVEPRIX A 
	 JOIN ETL_AVESCOPE B ON avintar = avontar  
	 JOIN ETL_AVETAR C ON aventar = avontar
	WHERE
		 (A.OP_FLAG LIKE '%P' OR B.OP_FLAG LIKE '%P' OR C.OP_FLAG LIKE '%P' )
		/* AND  CONVERT(DATE,GETDATE()) BETWEEN aveddeb AND avedfin
         AND CONVERT(DATE,GETDATE()) BETWEEN avoddeb AND avodfin
         AND CONVERT(DATE,GETDATE()) BETWEEN aviddeb AND avidfin */
		 AND A.RUNID=0 AND B.RUNID=0 AND C.RUNID=0

 -- add items which are all starts from tomorrow from artattri ,ARTUC for the pos and lable attribute
 
 INSERT INTO #PROCESS_ITEM SELECT AATCINR AS ITEM,'U' AS ITEM_FLAG  FROM ETL_ARTATTRI WHERE RUNID=0 
 AND  (AATCCLA IN ('FOODSTMP','PRODTYP','NOSA','RX','SCALE','PRICERQD','QHP','QTYRQD','AGE','TAX','QTYONE','POINTS','RESTR','POSITEM',
					'FREEFORM','RPTCODE','X3DESC','X2DESC','SGN0','LBL0','LINK_CD') )
 AND ((CONVERT(DATE,GETDATE()) = AATDDEB ) OR (AATDFIN=CONVERT(DATE,GETDATE())))
 UNION ALL
 SELECT ARACINR AS ITEM,'I' AS ITEM_FLAG FROM ETL_ARTUC WHERE RUNID=0  AND (CONVERT(DATE,GETDATE()) = ARADDEB )
 

 
 		 

	--	SELECT * FROM #PROCESS_PRICE
	
 SELECT * INTO #ALLITEMS 
 FROM (

 SELECT * FROM 
(
    SELECT distinct
	    'P' as source,
		ARVCINR AS ITEM,
		'U' AS ITEM_FLAG,
     --    CASE WHEN (RESDFIN=CONVERT(DATE,GETDATE()) OR CONVERT(DATE,GETDATE()) = AVODFIN) THEN
	--	0
	--	ELSE
		  CASE WHEN @usemulti='Y'  AND  PATATT NOT LIKE 'REG%' THEN (aviprix/isnull(avimulti,1))  ELSE AVIPRIX END  as AVIPRIX,		
        O.avorescint ,
		RESSITE,
	    ARACFIN,
		ARACEAN,
		ARACINL,
        I.avicinv ,
		ARVCLIBL,
		AVIDDEB ,
		AVIDFIN,
		OPLCEXOPR,
		PATATT,
		CASE WHEN @usemulti='Y' AND  PATATT NOT LIKE 'REG%' THEN 1 else isnull(AVIMULTI,1) end AVIMULTI,
		--AVINTAR,
		--AVOPRIO,
		(select case when len(arccode)=12 then (select right('0000000000000'+ substring('000'+ARCCODE,1,14),14)) 
					when len(arccode)=13 then (select right('0000000000000'+ substring('00'+ARCCODE,1,14),14))
					when len(arccode)=14 then (select right('0000000000000'+ substring('0'+ARCCODE,1,14),14))
					--when len(arccode)<>12 or len(arccode)<>13 then  (select right('0000000000000'+ substring(ARCCODE,1,14),14)) 
					when len(arccode)<12 then  (select right('0000000000000'+ substring(ARCCODE,1,14),14)) 
					else '0' end  ) AS UPC,
        ARCCODE AS GOLDUPC,		
		
		(select patatt from etl_oprattri z where z.patcla='FRQ_SHOP' and z.PATNOPR=avenopr) promotype,
       
		ROW_NUMBER() OVER(PARTITION BY RESSITE, I.avicinv ORDER BY avoprio,I.AVINTAR) AS rnk  
    FROM 
        etl_avetar e 
        JOIN etl_avescope o ON aventar = avontar 
        JOIN etl_aveprix i ON aventar = avintar 
        JOIN etl_OPRATTRI A ON PATNOPR = AVENOPR 
            AND PATCLA = 'PRICE_TP' 
         -- AND PATATT = 'PRO'           
        JOIN etl_OPRPLAN  L ON OPLNOPR = PATNOPR  
		JOIN ETL_ARTUV U ON ARVCINV=AVICINV AND ARVETAT=1
		JOIN ETL_ARTCOCA C ON ARCCINV=ARVCINV AND ARCIETI=1	
		JOIN ETL_RESEAU R ON RESPERE=AVORESCINT AND RESRESID='SF'
		JOIN #PROCESS_PRICE B ON ARVCINV=B.AVICINV AND O.AVORESCINT=B.AVORESCINT --AND I.AVINTAR=B.AVINTAR		
		JOIN ETL_ARTUC Q ON ARASITE=O.AVORESCINT AND ARACINR=ARVCINR AND ARATFOU=1  --LATER ADD TO CHECK NOT DELETED ITEM
		--JOIN ETL_ARTATTRI Z ON AATCINR=ARVCINR  
		AND EXISTS (SELECT 1 FROM ETL_ARTATTRI SUB 
			WHERE CAST(GETDATE() AS DATE) BETWEEN SUB.AATDDEB AND SUB.AATDFIN 
		                 AND SUB.RUNID=0 AND SUB.AATCINR=ARVCINR AND SUB.AATCCLA='POSITEM' AND SUB.AATCATT='Y')	
         AND NOT EXISTS (SELECT 1 FROM ETL_ARTATTRI SUB 
			WHERE CAST(GETDATE() AS DATE) BETWEEN SUB.AATDDEB AND SUB.AATDFIN 
		    AND SUB.AATCINR=ARVCINR AND SUB.AATCCLA='PRODTYP' AND SUB.AATCATT='DISC')	
      WHERE 
          CONVERT(DATE,GETDATE()) BETWEEN aveddeb AND avedfin
        AND ( (CONVERT(DATE,GETDATE()) BETWEEN avoddeb AND avodfin) OR (CONVERT(DATE,GETDATE()) = AVODFIN))
        AND CONVERT(DATE,GETDATE()) BETWEEN aviddeb AND avidfin  
		AND CONVERT(DATE,GETDATE())  BETWEEN PATDDEB AND PATDFIN	
		AND CONVERT(DATE,GETDATE())  BETWEEN ARCDDEB AND ARCDFIN	
		AND CONVERT(DATE,GETDATE())  BETWEEN ARADDEB AND ARADFIN
		AND ((CONVERT(DATE,GETDATE())  BETWEEN RESDDEB AND RESDFIN) OR (CONVERT(DATE,GETDATE()) = RESDFIN)) --STORE END	
		AND RESSITE in (SELECT GoldStore FROM #teststore) 	
	
	
		AND E.RUNID=0	AND O.RUNID=0	AND I.RUNID=0  AND A.RUNID=0AND L.RUNID=0 AND R.RUNID=0 AND Q.RUNID=0) AS T  WHERE RNK=1 

	UNION
 
 SELECT * FROM 
(
    SELECT distinct
	    'I' as source,
		ARVCINR AS ITEM,
		P.ITEM_FLAG,
     --   CASE WHEN (RESDFIN=CONVERT(DATE,GETDATE()) OR CONVERT(DATE,GETDATE()) = AVODFIN) THEN
		--0
		--ELSE
		  CASE WHEN @usemulti='Y'  AND  PATATT NOT LIKE 'REG%' THEN (aviprix/isnull(avimulti,1))  ELSE AVIPRIX END  as AVIPRIX,		
        O.avorescint ,
		RESSITE,
	    ARACFIN,
		ARACEAN,
		ARACINL,
        I.avicinv ,
		ARVCLIBL,
		AVIDDEB,
		AVIDFIN,
		OPLCEXOPR,
		PATATT,
		CASE WHEN @usemulti='Y' AND  PATATT NOT LIKE 'REG%' THEN 1 else isnull(AVIMULTI,1) end AVIMULTI,
		(select case when len(arccode)=12 then (select right('0000000000000'+ substring('000'+ARCCODE,1,14),14)) 
					when len(arccode)=13 then (select right('0000000000000'+ substring('00'+ARCCODE,1,14),14))
					when len(arccode)=14 then (select right('0000000000000'+ substring('0'+ARCCODE,1,14),14))
					--when len(arccode)<>12 or len(arccode)<>13 then  (select right('0000000000000'+ substring(ARCCODE,1,14),14)) 
					when len(arccode)<12 then  (select right('0000000000000'+ substring(ARCCODE,1,14),14)) 
					else '0' end  ) AS UPC,
        ARCCODE AS GOLDUPC,		         
     (select patatt from etl_oprattri z where z.patcla='FRQ_SHOP' and z.PATNOPR=avenopr) promotype,
		ROW_NUMBER() OVER(PARTITION BY RESSITE, avicinv ORDER BY avoprio,AVINTAR) AS rnk  
    FROM 
        etl_avetar e 
        JOIN etl_avescope o ON aventar = avontar 
        JOIN etl_aveprix i ON aventar = avintar 
        JOIN etl_OPRATTRI A ON PATNOPR = AVENOPR 
		JOIN ETL_ARTUV ON ARVCINV=AVICINV AND ARVETAT=1
            AND PATCLA = 'PRICE_TP' 
         -- AND PATATT = 'PRO'           
        JOIN etl_OPRPLAN  L ON OPLNOPR = PATNOPR  
		JOIN #PROCESS_ITEM P ON P.ITEM=ARVCINR  
		JOIN ETL_RESEAU R ON RESPERE=AVORESCINT AND RESRESID='SF'
		JOIN ETL_ARTCOCA C ON ARCCINV=ARVCINV AND ARCIETI=1
		JOIN ETL_ARTUC Q ON ARASITE=AVORESCINT AND ARACINR=ARVCINR AND ARATFOU=1 -- --LATER ADD TO CHECK NOT DELETED ITEM
	--	JOIN ETL_ARTATTRI Z ON AATCINR=ARVCINR  
		AND EXISTS (SELECT 1 FROM ETL_ARTATTRI SUB 
					WHERE CAST(GETDATE() AS DATE) BETWEEN SUB.AATDDEB AND SUB.AATDFIN 
		            AND SUB.RUNID=0 AND SUB.AATCINR=ARVCINR AND SUB.AATCCLA='POSITEM' AND SUB.AATCATT='Y')	
         AND NOT EXISTS (SELECT 1 FROM ETL_ARTATTRI SUB 
			WHERE CAST(GETDATE() AS DATE) BETWEEN SUB.AATDDEB AND SUB.AATDFIN 
		    AND SUB.AATCINR=ARVCINR AND SUB.AATCCLA='PRODTYP' AND SUB.AATCATT='DISC')	
				
    WHERE 
       CONVERT(DATE,GETDATE()) BETWEEN aveddeb AND avedfin
        AND ( (CONVERT(DATE,GETDATE()) BETWEEN avoddeb AND avodfin) OR (CONVERT(DATE,GETDATE()) = AVODFIN))
        AND CONVERT(DATE,GETDATE()) BETWEEN aviddeb AND avidfin 
		AND CONVERT(DATE,GETDATE())  BETWEEN PATDDEB AND PATDFIN	
		AND CONVERT(DATE,GETDATE())  BETWEEN ARCDDEB AND ARCDFIN	
		AND CONVERT(DATE,GETDATE())  BETWEEN ARADDEB AND ARADFIN
		AND ((CONVERT(DATE,GETDATE()) BETWEEN RESDDEB AND RESDFIN) OR (CONVERT(DATE,GETDATE()) = RESDFIN)) --STORE END	
		AND CONVERT(DATE,GETDATE()) BETWEEN Q.ARADDEB AND Q.ARADFIN 
			AND RESSITE in (SELECT GoldStore FROM #teststore) AND P.ITEM_FLAG<>'D'   
		AND E.RUNID=0 AND O.RUNID=0 	AND I.RUNID=0  	AND A.RUNID=0 	AND L.RUNID=0	AND R.RUNID=0 AND Q.RUNID=0) AS T  WHERE RNK=1 )U


		
RAISERROR('Get Regular price to temp table....',10,1) WITH NOWAIT

 SELECT RESSITE,ITEM_SV,UPC,EFFFROM,EFFTHRU,PRCTYPE,PRCMULTI,PRICE,EVENTCD
 INTO #REGPRICE
 FROM 
(
    SELECT distinct	 
       -- (aviprix/avimulti) AS price, 
	    I.aviprix PRICE,
        O.AVORESCINT AS storenum,
		R.RESSITE,
		ARCCODE AS UPC,
        I.avicinv AS item_sv,
		I.aviddeb as EFFFROM,
		I.avidfin as EFFTHRU,
		isnull(I.avimulti,1) as prcmulti,
		L.OPLCEXOPR AS EVENTCD,			   
		A.PATATT PRCTYPE,
		ROW_NUMBER() OVER(PARTITION BY ressite, avicinv ORDER BY avintar) AS rnk  
   FROM 
        etl_avetar e 
        JOIN etl_avescope o ON aventar = avontar 
        JOIN etl_aveprix i ON aventar = avintar 
        JOIN etl_OPRATTRI A ON PATNOPR = AVENOPR 
		JOIN ETL_ARTUV ON ARVCINV=AVICINV AND ARVETAT=1
            AND PATCLA = 'PRICE_TP' 
            AND PATATT = 'REG'           
        JOIN etl_OPRPLAN  L ON OPLNOPR = PATNOPR  
		JOIN ETL_RESEAU R ON RESPERE=AVORESCINT AND RESRESID='SF'
		JOIN ETL_ARTCOCA C ON ARCCINV=ARVCINV AND ARCIETI=1
		JOIN ETL_ARTUC Q ON ARASITE=AVORESCINT AND ARACINR=ARVCINR AND ARATFOU=1 -- --LATER ADD TO CHECK NOT DELETED ITEM
	--	JOIN ETL_ARTATTRI Z ON AATCINR=ARVCINR  
		AND EXISTS (SELECT 1 FROM ETL_ARTATTRI SUB 
					WHERE CAST(GETDATE() AS DATE) BETWEEN SUB.AATDDEB AND SUB.AATDFIN 
		            AND SUB.RUNID=0 AND SUB.AATCINR=ARVCINR AND SUB.AATCCLA='POSITEM' AND SUB.AATCATT='Y')	
          AND NOT EXISTS (SELECT 1 FROM ETL_ARTATTRI SUB 
			WHERE CAST(GETDATE() AS DATE) BETWEEN SUB.AATDDEB AND SUB.AATDFIN 
		    AND SUB.AATCINR=ARVCINR AND SUB.AATCCLA='PRODTYP' AND SUB.AATCATT='DISC')	  
       				
    WHERE 
       CONVERT(DATE,GETDATE()) BETWEEN aveddeb AND avedfin
        AND ( (CONVERT(DATE,GETDATE()) BETWEEN avoddeb AND avodfin) OR (CONVERT(DATE,GETDATE()) = AVODFIN))
        AND CONVERT(DATE,GETDATE()) BETWEEN aviddeb AND avidfin 
		AND CONVERT(DATE,GETDATE())  BETWEEN PATDDEB AND PATDFIN	
		AND CONVERT(DATE,GETDATE())  BETWEEN ARCDDEB AND ARCDFIN	
		AND CONVERT(DATE,GETDATE())  BETWEEN ARADDEB AND ARADFIN
		AND ((CONVERT(DATE,GETDATE()) BETWEEN RESDDEB AND RESDFIN) OR (CONVERT(DATE,GETDATE()) = RESDFIN)) --STORE END	
		AND CONVERT(DATE,GETDATE()) BETWEEN Q.ARADDEB AND Q.ARADFIN 
		AND EXISTS (SELECT 1 FROM  #ALLITEMS S WHERE  S.ITEM=aracinr AND S.AVICINV=C.ARCCINV AND r.RESSITE=S.RESSITE)
			AND RESSITE in (SELECT GoldStore FROM #teststore) --AND P.ITEM_FLAG<>'D'   
		AND E.RUNID=0 AND O.RUNID=0 	AND I.RUNID=0  	AND A.RUNID=0 	AND L.RUNID=0	AND R.RUNID=0 AND Q.RUNID=0) AS T  WHERE RNK=1 

	
RAISERROR('Get item Attributes to temp table....',10,1) WITH NOWAIT

SELECT * INTO #TAB
FROM   

   (SELECT AATCINR,AATCCLA,AATCATT
    FROM ETL_ARTATTRI A INNER  JOIN #ALLITEMS B  ON A.AATCINR=B.ITEM  
	 AND CAST(GETDATE() AS DATE) BETWEEN A.AATDDEB AND A.AATDFIN 
				 AND (AATCCLA IN ('FOODSTMP','NOSA','PRODTYP','RX','SCALE','PRICERQD','QHP',
						         'QTYONE','QTYRQD','RESTR','AGE','TAX','POSITEM','RPTCODE','LINK_CD'))
								 AND a.RUNID=0    
		--	OR ((AATCCLA LIKE 'DEPT%')  OR (AATCCLA LIKE 'SUB_%')))  
    UNION ALL
	SELECT AATCINR,AATCCLA, AATVALN AS AATCATT
    FROM ETL_ARTATTRI A INNER  JOIN #ALLITEMS B  ON A.AATCINR=B.ITEM  
	 AND CAST(GETDATE() AS DATE) BETWEEN A.AATDDEB AND A.AATDFIN  AND A.RUNID=0
				 AND AATCCLA='PRODID') T	

PIVOT(
    max(aatcatt) 
    FOR AATCCLA IN 
        ([FOODSTMP],[NOSA],[PRODTYP],[RX],[SCALE],[PRICERQD],[QHP],
						         [QTYONE],[QTYRQD],[RESTR],[AGE],[TAX],[POSITEM],[RPTCODE],[LINK_CD],[PRODID])
        ) AS pivot_table;

 --SELECT DEPT,SUBDEPT FROM ETL_POSDEPT GROUP BY SUBDEPT,DEPT HAVING COUNT(*)>1

 RAISERROR('Get POS Dept....',10,1) WITH NOWAIT
 select AATCINR,AATCCLA,SUBDEPT,AATCATT,(SELECT DISTINCT POSDEPT FROM ETL_POSDEPT A WHERE DEPT=RIGHT(AATCCLA,2) AND A.SUBDEPT=T.SUBDEPT) POSDEPT INTO  #DEPT
 FROM
   (SELECT AATCINR,AATCCLA, substring(AATCATT,CHARINDEX('_',AATCATT)+1,len(AATCATT)) as SUBDEPT ,AATCATT 
    FROM ETL_ARTATTRI A INNER  JOIN #ALLITEMS B  ON A.AATCINR=B.ITEM  
	 AND CAST(GETDATE() AS DATE) BETWEEN A.AATDDEB AND A.AATDFIN 
	AND (AATCCLA LIKE 'DEPT%')  AND A.RUNID=0) T;


	RAISERROR('Get Category....',10,1) WITH NOWAIT;

	    with n as(
							select   objcint,objpere ,item
							from etl_strucrel,#ALLITEMS
							where objcint = ITEM and runid=0
							and CAST(GETDATE() AS DATE) between objddeb and objdfin
							union all
							select a.objcint,a.objpere,item
							from etl_strucrel a ,n
							where a.objcint=n.objpere 
							and CAST(GETDATE() AS DATE) between objddeb and objdfin and runid=0 ) 
							select  distinct  reverse(substring(reverse(sobcext),1,3)) Catno,item into #category  from n,ETL_STRUCOBJ obj 
							where sobcint=objpere 
							and sobidniv=4; 

					-- select *  into cat from #category
-- ** Create Large Linked item /Coupon 
RAISERROR('Get Coupons....',10,1) WITH NOWAIT
	
	  DECLARE @VALUE NUMERIC(15,4);
	  DECLARE @CTYPE VARCHAR(3);
	  DECLARE @EVT VARCHAR(10);
	  DECLARE @STDT DATE;
	  DECLARE @ENDDT DATE;
	  DECLARE @CATID NUMERIC(5);
	  DECLARE @ITEMIN NUMERIC(10);
	  DECLARE @AVIMULTI INT;

	  DECLARE C_COUPON CURSOR FOR 
	  SELECT distinct PROMOTYPE,AVIPRIX,OPLCEXOPR,AVIDDEB,AVIDFIN,ITEM,AVIMULTI FROM #ALLITEMS where ITEM_FLAG<>'D' AND promotype IN ('A','Y');
	  OPEN C_COUPON;
	  FETCH C_COUPON INTO @CTYPE,@VALUE,@EVT,@STDT,@ENDDT,@ITEMIN,@AVIMULTI;
	  WHILE @@FETCH_STATUS = 0 BEGIN
	  set @CATID=(SELECT distinct CATNO FROM #category x where x.item=@ITEMIN);
       EXECUTE dbo.Get_LinkedItemCode_call @ITEM_IN,@CTYPE,@VALUE,@EVT,@STDT,@ENDDT,@CATID,@AVIMULTI;
       FETCH NEXT FROM c_coupon INTO @CTYPE,@VALUE,@EVT,@STDT,@ENDDT,@ITEMIN,@AVIMULTI;
     END;
	 CLOSE C_COUPON;
   DEALLOCATE C_COUPON;

  -- SELECT * FROM LINKED_ITM_DTL
  -- select * from #ALLITEMS
	 ---**Bottle Deposit *****

	 
	SELECT AATCINR SITEM,LINK_CD
	INTO #BOTITEMS
	FROM #TAB 
    WHERE LINK_CD IS NOT NULL


	 SELECT * INTO #BDEPOSIT FROM (
	 SELECT DISTINCT ITEM AS BOTCINR,GOLDUPC AS BOTGOLDUPC,UPC AS BOTPOSUPC,A.AATCATT--,SITEM 
	 FROM #ALLITEMS C JOIN ETL_ARTATTRI A
	 ON ITEM = AATCINR AND AATCCLA='BTL_DPST' 	
	 WHERE CAST(GETDATE() AS DATE) BETWEEN AATDDEB AND AATDFIN 
	 ) T;
	 

	 RAISERROR('Get BottleDeposit to temp table....',10,1) WITH NOWAIT

	 
	 
	 SELECT * INTO #ALL_BDEPOSIT FROM (
	 SELECT DISTINCT ARCCINR AS BOTCINR,ARCCODE AS BOTGOLDUPC,
	 SUBSTRING(ARCCODE,1,LEN(ARCCODE)-1) AS BOTPOSUPC,A.AATCATT
	 FROM  ETL_ARTATTRI A JOIN ETL_ARTCOCA B
	 ON ARCCINR = AATCINR AND AATCCLA='BTL_DPST' 	
	 WHERE CAST(GETDATE() AS DATE) BETWEEN AATDDEB AND AATDFIN 
	 AND CAST(GETDATE() AS DATE) BETWEEN ARCDDEB AND ARCDFIN 
	 AND EXISTS(SELECT 1 FROM ETL_ARTATTRI I WHERE I.AATCINR=A.AATCINR AND I.RUNID=0 AND AATCCLA='PRODTYP' AND AATCATT='DEP'	
	 AND CAST(GETDATE() AS DATE) BETWEEN I.AATDDEB AND I.AATDFIN )
	 AND ARCIETI=1
	 AND A.RUNID=0 AND B.RUNID=0
	 ) T;
	 
	 
	 RAISERROR('Get item description to temp table....',10,1) WITH NOWAIT

 SELECT * INTO #TRA_STRUCOBJ FROM(
	  select TSOBCINT,TSOBDCAIS,TSOBDESC  FROM ETL_TRA_STRUCOBJ a INNER MERGE JOIN #ALLITEMS B
	  ON A.TSOBCINT=B.ARVCLIBL 	AND A.RUNID=0
	  UNION ALL
	    select TSOBCINT,TSOBDCAIS,TSOBDESC FROM ETL_TRA_STRUCOBJ A INNER MERGE JOIN #BDEPOSIT B
	  ON A.TSOBCINT=B.BOTCINR AND A.RUNID=0) A
--	DROP TABLE #ETL_TRA_STRUCOBJ

RAISERROR('Get records to STG_POS_ITEMS....',10,1) WITH NOWAIT
	
--	DROP TABLE #BDEPOSIT

	 --******* 000100136364  --SELECT * FROM ETL_ARTATTRI WHERE AATCCLA='LINK_CD' AND AATCINR=8986153

	-- SELECT* FROM STG_POS_ITEMS WHERE RUNID=677 #BDEPOSIT WHERE BOTUPC='000100136364'

	
	INSERT INTO STG_POS_ITEMS
	            SELECT  
			@RUNID AS RUNID,
				ITEM ITEM_IN,
				'' AS TAB,
		        'N' AS OP_FLAG,
				(SELECT ARTCEXR FROM ETL_ARTRAC  WHERE ARTCINR= ITEM and runid=0 ) ITEM_EX , --from TEMP_POSITEMS				
                IIF(FOODSTMP='Y',1,0)  ,  
				(SELECT CASE
                WHEN PRODTYP='SCPN'  THEN '7'
				WHEN PRODTYP='CPN'  THEN '7'
	            WHEN PRODTYP='VCPN' THEN '6'
	            WHEN PRODTYP='MCPN' THEN '6'	          
	            WHEN PRODTYP='MREF' THEN '5'
				WHEN PRODTYP='DEP' THEN '1'
				WHEN PRODTYP='REF' THEN '2'
				WHEN PRODTYP='DEPR' THEN '3'
	            ELSE '0' END)PRODTYP,      
				
		    IIF (NOSA='Y',1,0) NOSA,	
				               
			/* (select case when tsobdesc like '[=]%' then '1'   else '0'  end  
               from #TRA_STRUCOBJ where TSOBCINT = ARVCLIBL ) WIC, */
			   1 AS WIC,
			 			  
          	 IIF (RX='Y',1,0) RX, --LATER
            
			 IIF (SCALE='Y',1,0) SCALEABLE,
            
			   IIF (PRICERQD='Y',1,0)PRICERQD,
            
			  IIF (QHP='Y',1,0)QHP,			      
			  
			  IIF (QTYONE='Y',1,0)QTYONE,				   
              
			  IIF (QTYRQD='Y',1,0)QTYRQD,				  
			  
			  IIF (RESTR='Y',1,0)RESTR,
			 
             (SELECT CASE WHEN AGE='21' THEN '1' WHEN AGE='18' THEN '2' ELSE '0' END)AGE,
			       
			-- (select substring(AATCATT,5,3) from #TAB where aatccla like 'DEPT_%' AND AATCINR=ITEM  )VALUECARD, 
			  --WILL CHANGE LATER
			  NULL AS VALUECARD,
            
			 IIF (TAX='Y',1,0)TAX,

	      --  (SELECT right('000'+ substring(AATCCLA,6,3),3) FROM #DEPT WHERE  AATCINR=ITEM)  DEPT_CODE,  --C1
			(SELECT distinct right('000'+ POSDEPT,3) FROM #DEPT WHERE  AATCINR=ITEM)  DEPT_CODE,
			 
             --(SELECT DISTINCT substring(AATVALN,1,17) FROM #TAB WHERE  AATCCLA='X1DESC' )ITEM_NAME , 

			 

			 ( SELECT DISTINCT substring(TSOBDCAIS,1,17) FROM #TRA_STRUCOBJ WHERE TSOBCINT=ARVCLIBL ) ITEM_NAME,	
			 
			-- null as item_name,
			 UPC, 		
			 
			 RESSITE AS STORE,
				
			 AVIPRIX AS PRICE,

		--	(SELECT CASE WHEN AATCATT='Y' THEN '1' ELSE '0' END FROM #TAB WHERE AATCCLA='POINTS'  AND AATCINR=ITEM )POINTS,
		null as points,

			PRODID AS SKU,

			1  AS REQUEST_ID,
									
			 POSITEM ,

			--(SELECT DISTINCT AATVALN FROM #TAB WHERE AATCCLA LIKE 'FREEFORM%' AND AATCINR=ITEM)
			NULL AS FREEFORM,
					
			(SELECT CASE WHEN RPTCODE='1' THEN 'A' WHEN RPTCODE='2' THEN 'B' WHEN RPTCODE='3' THEN 'C' WHEN RPTCODE='4' THEN 'O' 
			     WHEN RPTCODE='5' THEN 'T' ELSE '0' END ) RPTCODE,

 		--	( SELECT DISTINCT TSOBDESC FROM ETL_TRA_STRUCOBJ WHERE TSOBCINT=ARVCLIBL AND RUNID=0 AND LANGUE='US' ) AS LBLDESC,	--	PRINT @LBL 
		    null as lbldesc,

			(SELECT  distinct CASE RIGHT(POSDEPT,2) WHEN '01' THEN 'G' WHEN '02' THEN 'P' WHEN '03' THEN 'M' 
				WHEN '04' THEN 'L' WHEN '05' THEN 'D' WHEN '06' THEN 'S'  WHEN '07' THEN 'B' WHEN '08' THEN 'F' 
				WHEN '09' THEN 'N'  WHEN '10' THEN 'G' WHEN '11' THEN 'R' WHEN '13' THEN 'P' WHEN '14' THEN 'S' WHEN '15' THEN 'X'  
				ELSE '0' END  FROM #DEPT WHERE AATCINR=ITEM)DEPTCD,
			
		--	(SELECT SUBSTRING(AATVALN,1,12) FROM #TAB WHERE AATCCLA LIKE '%X3DESC%' AND AATCINR=ITEM ) AS CPM,	
		NULL AS CPM,
				
		--	(SELECT SUBSTRING(AATVALN,1,12) FROM #TAB WHERE  AATCCLA LIKE '%X2DESC%'  AND AATCINR=ITEM ) AS COLOR,
		NULL AS COLOR,
									   
	/*	(SELECT CASE  WHEN AATCATT = 'LOCAL' THEN 'L' WHEN AATCATT = 'ORGANIC' THEN 'O' ELSE 'A' END AS LN
          FROM #TAB WHERE AATCCLA='SGN0' AND AATCINR=ITEM  )*/ 
		  null LOEN,

		(SELECT distinct FOUCNUF FROM ETL_FOUDGENE WHERE FOUCFIN=ARACFIN AND RUNID=0) VENDOR,
    
        /*  (SELECT  distinct 'M'  FROM ETL_ARTCOCA WHERE ARCCINR=ITEM  AND ARCIETI=0  AND RUNID=0 AND CONVERT(DATE,GETDATE()) BETWEEN ARCDDEB AND ARCDFIN) */
		null MULTIUPC,
			
			 ARACEAN AS VDRPRDID, 
			
			(SELECT distinct FOULIBL FROM ETL_FOUDGENE WHERE FOUCFIN=ARACFIN AND RUNID=0) AS	 VDRNAME,
              
			--(SELECT ALLCOEFF FROM ETL_ARTULUL WHERE (ALLCINLP=ARACINL OR ALLCINLF=ARACINL))	CASEPACK, --LATER ENABLE
			0 AS CASEPACK, 

			ARACFIN AS VENDORIN,

			GOLDUPC AS GOLD_UPC,
              '' AS ERRDESC,
			AVICINV,

			promotype,

			PATATT AS PRCTYPE,

			OPLCEXOPR AS EVTCODE,

		
			CASE WHEN PROMOTYPE IN ('A','Y') THEN (SELECT dbo.Get_LinkedItemCode(A.ITEM,promotype,AVIPRIX,OPLCEXOPR,AVIDDEB,AVIDFIN,AVIMULTI,
			(select DISTINCT CATNO from #category x where x.item=a.item))) ELSE '0000000000000' END AS LLINKEDUPC ,
		   --	ISNULL( (SELECT BOTPOSUPC FROM #ALL_BDEPOSIT WHERE AATCATT=(SELECT LINK_CD FROM #BOTITEMS WHERE SITEM=A.ITEM)) ,'0000') as LINKEDCODE,
		   ISNULL( (SELECT BOTPOSUPC FROM #ALL_BDEPOSIT WHERE AATCATT=
			(SELECT LINK_CD FROM (SELECT LINK_CD ,rank() OVER (ORDER BY LINK_CD DESC) RNK FROM #BOTITEMS WHERE SITEM=A.ITEM)T  WHERE RNK=1)) ,'0000') 
		 as LINKEDCODE,
		
		(SELECT PRICE FROM #REGPRICE X WHERE X.ITEM_SV=A.AVICINV AND X.RESSITE=A.RESSITE) REGPRICE,
		PRODTYP
		
	--	SELECT * FROM #BDEPOSIT
		
    FROM #ALLITEMS A ,#TAB WHERE AATCINR=ITEM  AND ITEM_FLAG!='D'

	
	--UPDATE STG_POS_ITEMS SET LLINKEDUPC=NULL WHERE LLINKEDUPC=-1
	--SELECT * FROM #ALLITEMS
	--select * from stg_pos_items
	INSERT INTO STG_POS_ITEMS  (RUNID,ITEM_IN,OP_FLAG,ITEM_EX,UPC) 	 
	            SELECT  
				@RUNID AS RUNID,
				ITEM ITEM_IN,			
				 ITEM_FLAG AS OP_FLAG,
				(SELECT ARTCEXR FROM ETL_ARTRAC  WHERE ARTCINR= ITEM AND RUNID=0 ) ITEM_EX,	  
			--	(SELECT AATVALN FROM #TAB WHERE AATCCLA='PRODID' AND AATCINR=ITEM ) AS SKU,
				UPC
				FROM #ALLITEMS WHERE ITEM_FLAG='D';

				--DROP TABLE UNUSEDCPN IF NOT EXISTS

   --select LnkdItmupc into UNUSEDCPN from LINKED_ITM_DTL where not exists(select 1 from pos_store_audit where large_linked_to='000000'+(convert(varchar(10),LnkdItmupc)))				 

	  
	RAISERROR('Insert STG_POS_ITEM tables',10,1) WITH NOWAIT
							/*INSERT INTO pos_item_job_sweeper 
							SELECT REQUEST_ID ,GETDATE(),NULL,
				               NULL,'UPDATE','','pending',(select distinct PosStore from GoldPos_Store_map)  FROM STG_POS_ITEMS WHERE RUNID=@RUNID AND EXISTS (SELECT 1 FROM POS_UPDATE_ITEM WHERE batch_id=@RUNID)
								AND   REQUEST_ID NOT IN  (SELECT REQUEST_ID FROM pos_item_job_sweeper)*/
								

	RAISERROR('Insert POS tables',10,1) WITH NOWAIT

	
	  UPDATE A SET OP_FLAG='I' FROM STG_POS_ITEMS A WHERE 	 
	   UPC IS NOT NULL AND convert(float,(ISNULL(REGPRICE,0)))<>0 	
	  AND OP_FLAG  NOT IN ('D','L') AND RUNID=@RUNID
	  AND NOT EXISTS( SELECT 1 FROM POS_STORE_AUDIT c WHERE c.UPC=A.UPC )

	  UPDATE A SET OP_FLAG='U' FROM STG_POS_ITEMS A WHERE 
	   UPC IS NOT NULL AND convert(float,(ISNULL(REGPRICE,0)))<>0 	
	  AND OP_FLAG NOT IN ('D','L') AND RUNID=@RUNID
	  AND  EXISTS( SELECT 1 FROM POS_STORE_AUDIT c WHERE c.UPC=A.UPC )

	  UPDATE A SET OP_FLAG='D' FROM STG_POS_ITEMS A WHERE 
	   UPC IS NOT NULL --AND convert(float,(ISNULL(REGPRICE,0)))=0 	 --need to confirm
	   AND OP_FLAG='D' AND RUNID=@RUNID
	  AND  EXISTS( SELECT 1 FROM POS_STORE_AUDIT c WHERE c.UPC=A.UPC )


	 -- select * from stg_pos_items where UPC='00000000004484' LLINKEDUPC='10235153'

	 -- SELECT * FROM pos_store_audit WHERE large_linked_to='00000010235397'


	 
	  ----------------***Coupon Deletion if not used by any sale item ***************-
	  
	  SELECT DISTINCT A.UPC,A.large_linked_to INTO #CPN1 FROM pos_store_audit A WHERE EXISTS(SELECT 1 FROM STG_POS_ITEMS B  WHERE 
	  RUNID=@RUNID AND substring(A.large_linked_to,7,len(large_linked_to))<>ISNULL(LLINKEDUPC,0) AND A.UPC=B.UPC ) AND large_linked_to<>'00000000000000'

	  SELECT DISTINCT substring(A.large_linked_to,7,len(large_linked_to)) UNCPN INTO #UNUSEDCPN FROM #CPN1 A 
	  WHERE NOT EXISTS(SELECT 1 FROM pos_store_audit B WHERE B.large_linked_to=A.large_linked_to AND A.UPC<>B.UPC)




		 
DECLARE @gstore int,
        @posstore varchar(5),
		@ROWCNT INT=0;
	
DECLARE C_STORE CURSOR FOR select GoldStore,active_posstore from #teststore;
OPEN C_STORE;
FETCH NEXT FROM C_STORE INTO @gstore,@posstore;

WHILE @@FETCH_STATUS = 0  
BEGIN

	
set @request_id =(SELECT ISNULL((SELECT MAX(request_id)+1 from pos_item_job_sweeper),1));

		INSERT INTO pos_coupon_item (id,created_at,price_type,request_id,sequence,status,type,upc,value,name,department,promo_code)
			SELECT NEXT VALUE FOR SEQ_CPNID,
				GETDATE(),3,@request_id,1,'pending',CASE WHEN Lnkditmtyp=7 then 'store' END,UPC,LnkdItmVal--((REGPRICE*t.ItemsPerCpn)-LnkdItmVal) --need to confrim is it right
				,LnkdItmDesc,dept_code,promocode from
				(select distinct RIGHT (REPLICATE('0',13)+CAST(LnkdItmupc AS VARCHAR(14)),14) UPC, LnkdItmVal ,LnkdItmDesc,PriceMethod,LnkdItmTyp,
				-- RIGHT (REPLICATE('0',13)+CAST(LINKEDCODE AS VARCHAR(14)),14) code, 
				b.ItemsPerCpn ItemsPerCpn,
				 DEPT_CODE,promocode from LINKED_ITM_DTL A JOIN LINKED_ITM_HDR B ON A.HdrID=B.HdrID JOIN
				 STG_POS_ITEMS ON LnkdItmupc=LLINKEDUPC  WHERE runid=@runid and STORE=@gstore
				 AND NOT EXISTS(SELECT 1 FROM POS_STORE_AUDIT x WHERE convert(numeric,x.upc)=LnkdItmupc)) T

				  SET @ROWCNT=@@ROWCOUNT;

				 --SCPN from gold
      	INSERT INTO pos_coupon_item (id,created_at,price_type,request_id,sequence,status,type,upc,value,name,department)
			SELECT NEXT VALUE FOR SEQ_CPNID,
				GETDATE(),3,@request_id,1,'pending',CASE WHEN PRODTYP=7 then 'store' END,UPC,PRICE,ITEM_NAME,DEPT_CODE 
				FROM STG_POS_ITEMS A 
				WHERE OP_FLAG='I' and RUNID=@runid and UPC IS NOT NULL  and STORE=@gstore AND PRODTYP =7;


		IF @@ROWCOUNT>0 OR @ROWCNT>0
           INSERT INTO pos_item_job_sweeper values (@request_id,GETDATE(),null,null,'COUPON',NULL,'DELTA LOAD ','pending',@posstore);


 --select * from pos_deposit_item   ---
 set @request_id =(SELECT ISNULL((SELECT MAX(request_id)+1 from pos_item_job_sweeper),1));  

	INSERT INTO POS_DEPOSIT_ITEM (id,created_at,department,deposit_type,name,price,pricing_method,quantity,request_id,status,upc)
				 SELECT  NEXT VALUE FOR SEQ_BOTID,GETDATE(),DEPT_CODE, CASE WHEN PRODTYP =1 THEN 'normal' ELSE 'return' end,
				 dname,price,0,1,@request_id,'pending',upc  FROM
				(select distinct item_name dname, price,UPC, DEPT_CODE,PRODTYP
			 	FROM STG_POS_ITEMS A JOIN #BDEPOSIT  B ON  A.ITEM_IN=B.BOTCINR AND STORE=@gstore and RUNID=@RUNID AND A.PRODTYP IN (1,3)) AS a
				

			IF @@ROWCOUNT>0 
           INSERT INTO pos_item_job_sweeper values (@request_id,GETDATE(),null,null,'DEPOSIT',NULL,'DELTA LOAD ','pending',@posstore);

		
--*************************  ITEM   NEW  ********************************

  set @request_id =(SELECT ISNULL((SELECT MAX(request_id)+1 from pos_item_job_sweeper),1));   
 
	INSERT INTO POS_NEW_ITEM(ID,CREATED_AT,DEPARTMENT_CODE,FOOD_STAMP_ALLOWED,ITEM_NAME,ITEM_TYPE,LARGE_LINKED_TO,LINKED_ITEM_CODE,prescription_item,
	PRICE_METHOD,PRICE_REQUIRED,PRICE_TYPE,QUALIFIED_HEALTHCARE_PRODUCT,QUANTITY_NOT_ALLOWED,QUANTITY_REQUIRED,REPORTING_CODE,RESTRICTED_SALE_TYPE,SALE_PRICE,
	SALE_QUANTITY,TAXABLEA,UPC,VALUE_CARD_TYPE,WIC_ALLOWED,ERROR_MESSAGE,REQUEST_ID,STATUS)
	   SELECT 
                  NEXT VALUE FOR SEQ_POSID,
				  GETDATE(),DEPT_CODE,FOODSTMP,ITEM_NAME,PRODTYP,
				  RIGHT (REPLICATE('0',13)+CAST(LLINKEDUPC AS VARCHAR(14)),14) ,RIGHT(LINKEDCODE,4), 
				  RX,SCALEABLE,PRICERQD,NULL,QHP,QTYONE,QTYRQD,null,RESTR,   --rptcode need to check the value later
				  CASE WHEN (LLINKEDUPC IS NULL OR LLINKEDUPC=0) THEN isnull(PRICE,0) ELSE REGPRICE END ,
				  1,TAX,UPC,NULL,WIC,NULL,@request_id,'pending'  --,case when LINKEDCODE IS NOT NULL THEN 1 ELSE 0 END   
	  FROM STG_POS_ITEMS A 
	  WHERE OP_FLAG='I' and RUNID=@runid and UPC IS NOT NULL  and STORE=@gstore AND PRODTYP=0 AND ISNULL(GPRODTYPE,'A')<>'ZERO'
	--  AND NOT EXISTS (SELECT 1 FROM #BDEPOSIT C WHERE C.BOTPOSUPC=A.UPC);

	   SET @ROWCNT=@@ROWCOUNT;

	INSERT INTO POS_NEW_ITEM(ID,CREATED_AT,DEPARTMENT_CODE,FOOD_STAMP_ALLOWED,ITEM_NAME,ITEM_TYPE,LARGE_LINKED_TO,LINKED_ITEM_CODE,prescription_item,
	PRICE_METHOD,PRICE_REQUIRED,PRICE_TYPE,QUALIFIED_HEALTHCARE_PRODUCT,QUANTITY_NOT_ALLOWED,QUANTITY_REQUIRED,REPORTING_CODE,RESTRICTED_SALE_TYPE,SALE_PRICE,
	SALE_QUANTITY,TAXABLEA,UPC,VALUE_CARD_TYPE,WIC_ALLOWED,ERROR_MESSAGE,REQUEST_ID,STATUS,ldq_Deal_quantity,ldq_Limit_quantity)
	   SELECT 
                  NEXT VALUE FOR SEQ_POSID,
				  GETDATE(),DEPT_CODE,FOODSTMP,ITEM_NAME,PRODTYP,
				  RIGHT (REPLICATE('0',13)+CAST(LLINKEDUPC AS VARCHAR(14)),14) ,RIGHT(LINKEDCODE,4), 
				  RX,4,PRICERQD,NULL,QHP,QTYONE,QTYRQD,null,RESTR,   --rptcode need to check the value later
				 -- CASE WHEN LLINKEDUPC IS NOT NULL THEN REGPRICE ELSE isnull(PRICE,0) END ,
				  CASE WHEN (LLINKEDUPC IS NULL OR LLINKEDUPC=0) THEN isnull(PRICE,0) ELSE REGPRICE END,
				  1,TAX,UPC,NULL,WIC,NULL,@request_id,'pending',1,99
	  FROM STG_POS_ITEMS A 
	  WHERE OP_FLAG='I' and  RUNID=@runid and UPC IS NOT NULL  and STORE=@gstore AND PRODTYP=0 AND ISNULL(GPRODTYPE,'A')='ZERO';

	 	IF @@ROWCOUNT>0 OR @ROWCNT>0
	  INSERT INTO pos_item_job_sweeper values (@request_id,GETDATE(),null,null,'NEW',NULL,'DELTA LOAD ','pending',@posstore);


	  --*****************            UPDATE

	  
  set @request_id =(SELECT ISNULL((SELECT MAX(request_id)+1 from pos_item_job_sweeper),1));

   
 
	INSERT INTO POS_UPDATE_ITEM(ID,CREATED_AT,DEPARTMENT_CODE,FOOD_STAMP_ALLOWED,ITEM_NAME,ITEM_TYPE,LARGE_LINKED_TO,LINKED_ITEM_CODE,prescription_item,
	PRICE_METHOD,PRICE_REQUIRED,PRICE_TYPE,QUALIFIED_HEALTHCARE_PRODUCT,QUANTITY_NOT_ALLOWED,QUANTITY_REQUIRED,REPORTING_CODE,RESTRICTED_SALE_TYPE,SALE_PRICE,
	SALE_QUANTITY,TAXABLEA,UPC,VALUE_CARD_TYPE,WIC_ALLOWED,ERROR_MESSAGE,REQUEST_ID,STATUS,tax_planf)
	   SELECT 
                  NEXT VALUE FOR SEQ_POSID,
				  GETDATE(),DEPT_CODE,FOODSTMP,ITEM_NAME,PRODTYP,
				  RIGHT (REPLICATE('0',13)+CAST(LLINKEDUPC AS VARCHAR(14)),14) ,RIGHT(LINKEDCODE,4), 
				  RX,SCALEABLE,PRICERQD,NULL,QHP,QTYONE,QTYRQD,null,RESTR,   --rptcode need to check the value later
				--  CASE WHEN LLINKEDUPC IS NOT NULL THEN REGPRICE ELSE isnull(PRICE,0) END ,
				 CASE WHEN (LLINKEDUPC IS NULL OR LLINKEDUPC=0) THEN isnull(PRICE,0) ELSE REGPRICE END,
				  1,TAX,UPC,NULL,WIC,NULL,@request_id,'pending',case when LINKEDCODE IS NOT NULL THEN 1 ELSE 0 END   --LINK TO DEP FLAG
	  FROM STG_POS_ITEMS A 
	  WHERE OP_FLAG='U'  and RUNID=@runid and UPC IS NOT NULL  and STORE=@gstore AND PRODTYP=0 AND ISNULL(GPRODTYPE,'A')<>'ZERO'
	--  AND NOT EXISTS (SELECT 1 FROM #BDEPOSIT C WHERE C.BOTPOSUPC=A.UPC);

	  SET @ROWCNT=@@ROWCOUNT;

	INSERT INTO POS_UPDATE_ITEM(ID,CREATED_AT,DEPARTMENT_CODE,FOOD_STAMP_ALLOWED,ITEM_NAME,ITEM_TYPE,LARGE_LINKED_TO,LINKED_ITEM_CODE,prescription_item,
	PRICE_METHOD,PRICE_REQUIRED,PRICE_TYPE,QUALIFIED_HEALTHCARE_PRODUCT,QUANTITY_NOT_ALLOWED,QUANTITY_REQUIRED,REPORTING_CODE,RESTRICTED_SALE_TYPE,SALE_PRICE,
	SALE_QUANTITY,TAXABLEA,UPC,VALUE_CARD_TYPE,WIC_ALLOWED,ERROR_MESSAGE,REQUEST_ID,STATUS,ldq_Deal_quantity,ldq_Limit_quantity)
	   SELECT 
                  NEXT VALUE FOR SEQ_POSID,
				  GETDATE(),DEPT_CODE,FOODSTMP,ITEM_NAME,PRODTYP,
				  RIGHT (REPLICATE('0',13)+CAST(LLINKEDUPC AS VARCHAR(14)),14) ,RIGHT(LINKEDCODE,4), 
				  RX,4,PRICERQD,NULL,QHP,QTYONE,QTYRQD,null,RESTR,   --rptcode need to check the value later
				--  CASE WHEN LLINKEDUPC IS NOT NULL THEN REGPRICE ELSE isnull(PRICE,0) END ,
			 	 CASE WHEN (LLINKEDUPC IS NULL OR LLINKEDUPC=0) THEN isnull(PRICE,0) ELSE REGPRICE END,
				  1,TAX,UPC,NULL,WIC,NULL,@request_id,'pending',1,99
	  FROM STG_POS_ITEMS A 
	  WHERE OP_FLAG='U' and RUNID=@runid and UPC IS NOT NULL  and STORE=@gstore AND PRODTYP=0 AND ISNULL(GPRODTYPE,'A')='ZERO';

	 	IF @@ROWCOUNT>0 OR @ROWCNT>0
	  INSERT INTO pos_item_job_sweeper values (@request_id,GETDATE(),null,null,'UPDATE',NULL,'DELTA LOAD ','pending',@posstore);



	  -- ********************************* DELETE  ******************************** --
	  set @request_id =(SELECT ISNULL((SELECT MAX(request_id)+1 from pos_item_job_sweeper),1));

	  INSERT INTO POS_DELETE_ITEM  SELECT  NEXT VALUE FOR SEQ_POSID,NULL,GETDATE(),'NULL',@request_id,'pending',UPC FROM STG_POS_ITEMS 
	  WHERE OP_FLAG='D' and RUNID=@runid and UPC IS NOT NULL  and STORE=@gstore ;

	   INSERT INTO POS_DELETE_ITEM  SELECT  NEXT VALUE FOR SEQ_POSID,NULL,GETDATE(),'NULL',@request_id,'pending',UNCPN FROM #UNUSEDCPN

	  	IF @@ROWCOUNT>0 
	  INSERT INTO pos_item_job_sweeper values (@request_id,GETDATE(),null,null,'DELETE',NULL,'DELTA LOAD ','pending',@posstore);  
	
	  	  FETCH NEXT FROM C_STORE INTO @gstore,@posstore;
END;
CLOSE C_STORE;
DEALLOCATE C_STORE;



DELETE FROM LINKED_ITM_HDR WHERE HDRID IN (SELECT HdrID FROM LINKED_ITM_DTL A,#UNUSEDCPN B  WHERE A.LnkdItmupc=B.UNCPN);

DELETE A FROM LINKED_ITM_DTL A,#UNUSEDCPN B  WHERE A.LnkdItmupc=B.UNCPN;


					DROP TABLE #PROCESS_ITEM;
					DROP TABLE #ETL_ARTATTRI;
					DROP TABLE #ETL_ARTCOCA;
				    DROP TABLE #ETL_ARTRAC;
					DROP TABLE #ETL_STRUCOBJ;
					DROP TABLE #ETL_TRA_STRUCOBJ;
					DROP TABLE #ETL_FOUDGENE;
					DROP TABLE #ETL_ARTUC;	
					DROP TABLE #ETL_ARTUV;
					DROP TABLE #ETL_AVESCOPE;
					DROP TABLE #ETL_AVETAR;
					DROP TABLE #ETL_AVEPRIX;
					DROP TABLE #ETL_RESEAU;
					DROP TABLE #ETL_OPRATTRI
					DROP TABLE #ETL_OPRPLAN
              
UPDATE ETL_AVEPRIX  SET OP_FLAG='N' WHERE RUNID=0 AND OP_FLAG LIKE '%P'
UPDATE ETL_AVETAR   SET OP_FLAG='N' WHERE RUNID=0 AND OP_FLAG LIKE '%P'
UPDATE ETL_AVESCOPE SET OP_FLAG='N' WHERE RUNID=0 AND OP_FLAG LIKE '%P';
UPDATE ETL_AVESCOPE SET OP_FLAG='N' WHERE RUNID=0 AND OP_FLAG LIKE '%P';

END ;

GO

